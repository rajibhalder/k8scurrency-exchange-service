pipeline {

  environment {
    PROJECT = "in28minutes-3"
    CLUSTER = "jenkins-cd"
    CLUSTER_ZONE = "us-east1-d"
    JENKINS_CRED = "${PROJECT}"
  }

  agent {
    kubernetes {
      label 'currency-exchange-app'
      defaultContainer 'jnlp'
      yaml """
apiVersion: v1
kind: Pod
metadata:
labels:
  component: ci
spec:
  # Use service account that can deploy to all namespaces
  serviceAccountName: cd-jenkins
  containers:
  - name: mvn
    image: gcr.io/cloud-builders/mvn
    command:
    - cat
    tty: true
  - name: gcloud
    image: gcr.io/cloud-builders/gcloud
    command:
    - cat
    tty: true
  - name: kubectl
    image: gcr.io/cloud-builders/kubectl
    command:
    - cat
    tty: true
  - name: docker
    image: docker:latest
    command:
    - cat
    tty: true
    volumeMounts:
    - mountPath: /var/run/docker.sock
      name: docker-sock
  volumes:
    - name: docker-sock
      hostPath:
        path: /var/run/docker.sock
    - name: m2
      persistentVolumeClaim:
        claimName: m2
"""
}
  }
  stages {
    stage('build') {
      steps {
        container('kubectl') {
          script {
            gitCommit = sh(returnStdout: true, script: "kubectl get service/currency-exchange -o jsonpath='{.status.loadBalancer.ingress[0].ip}' --namespace=master").trim()
            sh "echo ${gitCommit}"
                }
        }
      }
    }
  }
}